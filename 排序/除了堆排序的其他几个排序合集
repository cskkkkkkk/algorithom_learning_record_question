#include<iostream>
using namespace std;
int arr[100] = { 8,1,4,2,18,15,99 ,37,32,6,3,7,97,56,65,34,22,32,11};//n=20;
void swap(int i, int j)
{
	int temp = arr[i];
	arr[i] = arr[j];
	arr[j] = temp;
}//交换值

//归并mergesort
void mergesort(int l,int r,int temp[])
{
	if (r <= l)
		return;
	int mid = (l + r) / 2;
	mergesort(l, mid,temp);
	mergesort(mid + 1, r,temp);
	for (int i = l; i <= r; i++)
	{
		temp[i] = arr[i];
	}
	int i1 = l, i2 = mid + 1;
	for (int curr = l; curr <= r; curr++)
	{
		if (i1 == mid + 1)
			arr[curr] = temp[i2++];
		else if (i2 > r)
			arr[curr] = temp[i1++];
		else if (temp[i1] < temp[i2])
			arr[curr] = temp[i1++];
		else
			arr[curr] = temp[i2++];
	}
    
}

//快速排序
int findpivot(int l, int r)
{
	return (l + r) / 2;
}
int partion(int l, int r, int pivot)
{

	do
	{
		while (arr[l] < pivot)l++;
		while (r > l && arr[r] >= pivot)r--;
		swap(l, r);
	} while (l < r);
		return l;
}
void quicksort(int l, int r)
{
	if (l>=r)
		return;
	int pivot = findpivot(l, r);
	swap(pivot, r);
	int k = partion(l, r, arr[r]);
	swap(k, r);
	quicksort(l, k - 1);
	quicksort(k + 1, r);

}



//插入排序
void insertsort(int n)//n是数组长度
{
	for (int i = 1; i < n; i++)
	{
		for (int j = i; j > 0; j--)
		{
			if (arr[j] < arr[j - 1])
				swap(j - 1, j);
		}
	}
}

//冒泡排序
void bublesort(int n)
{
	for (int i = 0; i < n; i++)
	{
		for (int j = n - 1; j > i; j--)
		{
			if (arr[j] < arr[j - 1])
				swap(j, j - 1);
		}
	}
}

//选择排序
void selectsort(int n)
{
	for (int i = 0; i < n - 1; i++)
	{
		for (int j = n - 1; j > i; j--)
		{
			if (arr[j] < arr[i])
				swap(j, i);
		}
	}
}

//shell排序
void shellswap(int cnp, int from, int n)
{
	for (int i = from + cnp; i < n; i += cnp)
	{
		for (int j = i; j > 0; j -= cnp)
		{
			if (arr[j] < arr[j-cnp])
				swap(j-cnp, j);
		}
	}
}
void shellsort(int n)
{
	for (int i = n / 2; i >= 1; i /= 2)
	{
		for (int j = 0; j < i; j++)
		{
			shellswap(i, j, n);
		}
	}
}

//堆排序



int main()
{
	int temp[20];
	cout << "original arr:" << endl;
	for (int i = 0; i < 20; i++)
		cout << arr[i] << " ";
	cout << endl;
	mergesort(0, 19, temp);
	cout << "sorted arr:" << endl;
	for (int i = 0; i < 20; i++)
		cout << arr[i] << " ";
	cout << endl;
}
