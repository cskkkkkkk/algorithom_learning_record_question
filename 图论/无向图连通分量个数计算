#include<iostream>
#include<cstring>
#include<set>
using namespace std;
int n;//节点个数
int graph[1000][1000];
int ans;//记录联通分量个数
int vis[1000];//判断是否访问过
int set_[1000];//并查集记录连通分量个数
set<int>s;
int find(int x)
{
	if (x == set_[x])
		return x;
	return set_[x] = find(set_[x]);
}
void dfs(int source)
{
	vis[source] = 1;

		for (int j = 1; j <= n; j++)
		{
		
			if (graph[source][j])//为1说明为真然后就可以遍历这条边
			{
				int e1 = find(source);
				int e2 = find(j);
                set_[j] = set_[source];
				
			
				if (!vis[j])
				{
					dfs(j);
				}
			}
		}

}

int main()
{
	memset(vis, 0, sizeof(vis));
	
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			cin >> graph[i][j];
		}
	}
	for (int i = 1; i <= n; i++)
	{
		set_[i] = i;
	}//初始化并查集
	for(int i=1;i<=n;i++)
		dfs(i);

	for (int i = 1; i <= n; i++)
		s.insert(set_[i]);
	cout << s.size() << endl;//输出答案
	
}
